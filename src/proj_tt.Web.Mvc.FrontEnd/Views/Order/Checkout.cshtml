@using System.Globalization
@model proj_tt.Web.Models.Orders.CheckoutViewModel

@section styles {
    <link href="~/css/checkout.css" rel="stylesheet" />
}

<div class="container py-4">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb" class="mb-4">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Cart</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-body">
                    <form id="checkoutForm" method="post" action="/Order/CreateOrder" accept-charset="UTF-8">
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            <label for="Name" class="form-label">Full Name</label>
                            <input type="text" class="form-control" id="Name" name="Name" required maxlength="256">
                        </div>
                        <div class="mb-3">
                            <label for="Address" class="form-label">Address</label>
                            <textarea class="form-control" id="Address" name="Address" rows="3" required maxlength="512"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="Phone" class="form-label">Phone Number</label>
                            <input type="tel" class="form-control" id="Phone" name="Phone" required maxlength="20" pattern="[0-9]{10,20}">
                            <small class="form-text text-muted">Phone number must be between 10 and 20 digits</small>
                        </div>

                        @for (var i = 0; i < Model.Cart.CartItems.Count; i++)
                        {
                            <input type="hidden" name="OrderItems[@i].ProductId" value="@Model.Cart.CartItems[i].ProductId">
                            <input type="hidden" name="OrderItems[@i].Quantity" value="@Model.Cart.CartItems[i].Quantity">
                        }
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Order Summary</h5>
                    <div class="table-responsive">
                        <table class="table">
                            <tbody>
                                @foreach (var item in Model.Cart.CartItems)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <img src="@item.Product.ImageUrl" alt="@item.Product.Name" class="img-thumbnail" style="width: 60px; height: 60px; object-fit: cover;">
                                                <div class="ms-3">
                                                    <h6 class="mb-0">@item.Product.Name</h6>
                                                    <small class="text-muted">Quantity: @item.Quantity</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-end">
                                            @((item.Product.Price * (1 - item.Product.Discount/100) * item.Quantity).ToString("C", CultureInfo.CurrentCulture))
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <hr>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Subtotal</span>
                        <span>@Model.Cart.CartItems.Sum(item => item.Product.Price * (1 - item.Product.Discount/100) * item.Quantity).ToString("C", CultureInfo.CurrentCulture)</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Shipping</span>
                        <span>Free</span>
                    </div>
                    <hr>
                    <div class="d-flex justify-content-between mb-3">
                        <strong>Total</strong>
                        <strong>@Model.Cart.CartItems.Sum(item => item.Product.Price * (1 - item.Product.Discount/100) * item.Quantity).ToString("C", CultureInfo.CurrentCulture)</strong>
                    </div>
                    <button type="submit" form="checkoutForm" class="btn btn-primary w-100">Place Order</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            $('#checkoutForm').validate({
                rules: {
                    Name: {
                        required: true,
                        maxlength: 256
                    },
                    Address: {
                        required: true,
                        maxlength: 512
                    },
                    Phone: {
                        required: true,
                        minlength: 10,
                        maxlength: 20,
                        digits: true
                    }
                },
                messages: {
                    Name: {
                        required: 'Please enter your full name',
                        maxlength: 'Name must not exceed 256 characters'
                    },
                    Address: {
                        required: 'Please enter your shipping address',
                        maxlength: 'Address must not exceed 512 characters'
                    },
                    Phone: {
                        required: 'Please enter your phone number',
                        minlength: 'Phone number must be at least 10 digits',
                        maxlength: 'Phone number must not exceed 20 digits',
                        digits: 'Phone number must contain only digits'
                    }
                },
                submitHandler: function(form) {
                    // Prevent double submission
                    $(form).find('button[type="submit"]').prop('disabled', true);
                    form.submit();
                }
            });
        });
    </script>
} 